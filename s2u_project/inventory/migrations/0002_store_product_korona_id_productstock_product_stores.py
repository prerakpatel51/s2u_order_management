# Generated by Django 5.2.7 on 2025-10-14 22:56

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("inventory", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Store",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("korona_id", models.UUIDField(unique=True)),
                ("number", models.CharField(db_index=True, max_length=32)),
                ("name", models.CharField(max_length=255)),
                ("address_line1", models.CharField(blank=True, max_length=255)),
                ("address_line2", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(blank=True, max_length=128)),
                ("state", models.CharField(blank=True, max_length=64)),
                ("zip_code", models.CharField(blank=True, max_length=32)),
                ("country", models.CharField(blank=True, max_length=64)),
                ("company", models.CharField(blank=True, max_length=255)),
                ("active", models.BooleanField(default=True)),
                ("warehouse", models.BooleanField(default=False)),
                ("org_from_order", models.BooleanField(default=False)),
                ("receipt_share_enabled", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="product",
            name="korona_id",
            field=models.UUIDField(blank=True, null=True, unique=True),
        ),
        migrations.CreateModel(
            name="ProductStock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "actual",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "lent",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "max_level",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "ordered",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "reorder_level",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "average_purchase_price",
                    models.DecimalField(decimal_places=4, default=0, max_digits=12),
                ),
                ("listed", models.BooleanField(default=False)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stocks",
                        to="inventory.product",
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stocks",
                        to="inventory.store",
                    ),
                ),
            ],
            options={
                "ordering": ["store__name", "product__name"],
                "unique_together": {("product", "store")},
            },
        ),
        migrations.AddField(
            model_name="product",
            name="stores",
            field=models.ManyToManyField(
                related_name="products",
                through="inventory.ProductStock",
                to="inventory.store",
            ),
        ),
    ]
