# nixpacks.toml

[phases.setup]
# include pip + virtualenv packages explicitly so python has pip available
nixPkgs = ["python311", "python311Packages.pip", "python311Packages.virtualenv", "gcc"]
cmds = [
  "python -m venv /opt/venv",
  "/opt/venv/bin/python -m pip install --upgrade pip"
]

[phases.install]
cmds = [
  "/opt/venv/bin/pip install -r requirements.txt"
]

[phases.build]
cmds = [
  "/opt/venv/bin/python s2u_project/manage.py collectstatic --noinput"
]

[phases.release]
cmds = [
  "/opt/venv/bin/python s2u_project/manage.py migrate --noinput"
]

[start]
# Don’t import <pkg>.wsgi directly; call Django’s loader instead.
cmd = "gunicorn --chdir /app django.core.wsgi:get_wsgi_application --bind 0.0.0.0:$PORT"

[variables]
# Set this to whatever manage.py uses.
# Example values you might see: "s2u_project.settings", "config.settings", etc.
DJANGO_SETTINGS_MODULE="s2u_project.settings"
PYTHONPATH="/app:/app/s2u_project:$PYTHONPATH"
NIXPACKS_PATH="/opt/venv/bin:$NIXPACKS_PATH"
